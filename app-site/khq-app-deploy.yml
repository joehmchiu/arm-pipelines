parameters:
- name: RG
  displayName: App Resouce Group
  type: string
  default: new-transformer-dev2-identity-app-rg
  values:
  - new-transformer-dev2-identity-app-rg

- name: APP
  displayName: App Server Name
  type: string
  default: new-transformer-dev2-identity-app
  values:
  - new-transformer-dev2-identity-app

- name: SUB
  displayName: Subscription
  type: string
  default: demo-connection
  values:
  - demo-connection

# specific path build
trigger:
- none

variables:
  vmImageName: 'windows-latest'
  workspace: '$(System.DefaultWorkingDirectory)\app-site\web-api-001'
  package: 'app.zip'
  drop: 'shared'

stages:
- stage: BuildApp
  displayName: Compile Web Application

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          echo $(workingDirectory)
          echo $(System.DefaultWorkingDirectory)
      env:
        SECRET: "foobar"

    - task: UseDotNet@2
      displayName: 'Use .NET 6 Core SDK'
      inputs:
        packageType: 'sdk'
        installationPath: $(Agent.ToolsDirectory)/dotnet
        version: '3.1'
        includePreviewVersions: true

    - task: DotNetCoreCLI@2
      displayName: Build and Release Application
      inputs:
        command: 'build'
        projects: |
          $(workspace)/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(package)'
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(package)
      artifact: $(drop)

#     - task: AzureWebApp@1
#       inputs:
#         azureSubscription: ${{ parameters.SUB }}
#         appType: 'webApp'
#         appName: ${{ parameters.APP }}
#         package: $(Build.ArtifactStagingDirectory)/$(package)
#         deploymentMethod: 'runFromPackage'
#         # package: '$(Pipeline.Workspace)\$(drop)\*.zip'

- stage: WebApp
  displayName: Deploy Web App

  jobs:
  - job: Deploy
    displayName: Deploy Package to Web App Server
    pool: eland-pool
    steps:
      - download: current
        artifact: $(drop)
      - script: |
          az webapp deployment source config-zip -g ${{ parameters.RG }} -n ${{ parameters.APP }} --src $(Pipeline.Workspace)\$(drop)\$(package)
          echo "Build and Release done!"

