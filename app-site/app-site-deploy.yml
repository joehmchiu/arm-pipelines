parameters:
  - name: RG
    displayName: App Resouce Group
    type: string
    default: new-transformer-dev2-identity-app-rg
    values:
    - new-transformer-dev2-identity-app-rg

  - name: APP
    displayName: App Server Name
    type: string
    default: new-transformer-dev2-identity-app
    values:
    - new-transformer-dev2-identity-app

  - name: SUB
    displayName: Subscription
    type: string
    default: demo-connection
    values:
    - demo-connection

# specific path build
trigger:
- none

variables:
  vmImageName: 'windows-2022'
  workspace: '$(System.DefaultWorkingDirectory)\app-site\web-api-001'
  drop: 'shared'
  pack: 'app'
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: BuildApp
  displayName: Compile Web Application

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          echo $(workingDirectory)
          echo $(System.DefaultWorkingDirectory)

    - task: UseDotNet@2
      displayName: 'Use .NET 6.0.x'
      inputs:
        packageType: 'sdk'
        version: '6.0.x'

    # Add a Command To List the Current .NET SDKs (Sanity Check)
    - task: CmdLine@2
      inputs:
        script: 'dotnet --list-sdks'

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=True /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:publishUrl=$(Build.ArtifactStagingDirectory)\$(pack)'
        # msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\$(pack).zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)\$(pack)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)\$(pack).zip'
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(pack).zip
      artifact: $(drop)

- stage: WebApp
  displayName: Deploy Web App

  jobs:
  - job: Deploy
    displayName: Deploy Package to Web App Server
    pool: eland-pool
    steps:
      - download: current
        artifact: $(drop)
      - script: |
          az webapp deployment source config-zip -g ${{ parameters.RG }} -n ${{ parameters.APP }} --src $(Pipeline.Workspace)/$(drop)/$(pack).zip
          echo "Build and Release done!"

